#!/usr/bin/env python3
# -*- coding: utf-8 -*-

'''
Detect and report non-matching extensions. Not all, but some predefined.
Uses libmagic's content sniffing to determine actual types.
'''

import magic
import os
import sys
from progress.bar import Bar as ProgressBar

not_jpeg = []
not_png = []
not_gif = []
not_mp4 = []
not_webm = []
not_gifv = []
not_known = []

def recursive_walk(directory):
    for root, subdirs, files in os.walk(directory):
        if len(files) > 0:
            bar = ProgressBar(root, max=len(files))
            for f in files:
                bar.next()
                fn = os.path.join(root, f)
                m = magic.from_file(fn)

                if fn.endswith('.jpg') or fn.endswith('.jpeg') or fn.endswith('.JPG'):
                    if not m.startswith('JPEG image data'):
                        not_jpeg.append(fn)

                elif fn.endswith('.png') or fn.endswith('.PNG'):
                    if not m.startswith('PNG image data'):
                        not_png.append(fn)

                elif fn.endswith('.gif'):
                    if not m.startswith('GIF image data'):
                        not_gif.append(fn)

                elif fn.endswith('.mov') or fn.endswith('.mp4'):
                    if not m.startswith('ISO Media, MP4 v2') and \
                       not m.startswith('ISO Media, Apple QuickTime movie, Apple QuickTime') and \
                       not m.startswith('ISO Media, MP4 Base Media') and \
                       not m.startswith('ISO Media, Apple iTunes Video') and \
                       not m.startswith('ISO Media, MPEG v4 system') and \
                       not m.startswith('ISO Media, MPEG-4 (.MP4) for SonyPSP') and \
                       m != 'ISO Media':
                        not_mp4.append(fn)

                elif fn.endswith('.webm'):
                    if not m.startswith('WebM'):
                        not_webm.append(fn)

                elif fn.endswith('.gifv'):
                    if not m.startswith('WebM') and \
                       not m.startswith('ISO Media, MP4 Base Media'):
                        not_gifv.append(fn)

                else:
                        not_known.append(fn)
            bar.finish()


def write_result(title, result_filename, filelist):
    print('{}{}'.format(title, len(filelist)))
    if len(filelist) > 0:
        with open(result_filename, 'w') as f:
            f.write('\n'.join(filelist) + '\n')


recursive_walk(sys.argv[1])

write_result("not jpeg's:   ", 'not_jpeg.txt', not_jpeg)
write_result("not png's:    ", 'not_png.txt', not_png)
write_result("not gif's:    ", 'not_gif.txt', not_gif)
write_result("not mp4's:    ", 'not_mp4.txt', not_mp4)
write_result("not webm's:   ", 'not_webm.txt', not_webm)
write_result("not gifv's:   ", 'not_gifv.txt', not_gifv)
write_result("unknown type: ", 'not_known.txt', not_known)
