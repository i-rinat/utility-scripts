#!/usr/bin/env python3

import argparse
import sys

import cv2 as cv
import numpy as np


def all_same_color(im, threshold):
    return np.all(cv.absdiff(im, im[0,0]) <= threshold)


def arguments():
    parser = argparse.ArgumentParser(description=(
        'Trim solid colored borders at the top and bottom of the image.'))
    parser.add_argument('src_image', metavar='src-image',
                        help='source image file')
    parser.add_argument('dst_image', metavar='dst-image',
                        help='destination image file')
    parser.add_argument('-t', '--threshold', type=int, default=10,
                        help='color variation threshold')
    parser.add_argument('-e', '--edge-ignore', type=int, default=0,
                        help=('number of pixels from edges of a line to ' +
                              'disregard'))
    args = parser.parse_args()

    if args.src_image == args.dst_image:
        print('src-image and dst-image point to the same file.')
        sys.exit(2)

    return args


def main():
    args = arguments()

    im = cv.imread(args.src_image)

    edges = args.edge_ignore

    while all_same_color(im[0:1, edges:im.shape[1]-edges], args.threshold):
        im = im[1:im.shape[0], 0:im.shape[1]]

    while all_same_color(im[-1:, edges:im.shape[1]-edges], args.threshold):
        im = im[0:im.shape[0]-1, 0:im.shape[1]]

    cv.imwrite(args.dst_image, im)

if __name__ == '__main__':
    main()
